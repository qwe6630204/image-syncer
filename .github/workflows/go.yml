name: Auto Release (Windows)

on:
  push:
    branches: [ "master" ]  # 仅在 master 分支提交时触发

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整的 commit 历史，以便计算 tag

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.0'

    - name: Install Dependencies
      run: go mod tidy

    - name: Build
      run: go build -v -o image-syncer.exe ./...

    - name: Get Latest Tag
      id: get_tag
      run: |
        git fetch --tags
        latest_tag=$(git tag --sort=-v:refname | head -n 1)
        if [[ -z "$latest_tag" ]]; then
          latest_tag="v1.0.0"
        else
          latest_tag=$(echo $latest_tag | awk -F. '{print $1"."$2"."$3+1}')  # 递增 patch 版本
        fi
        echo "NEW_TAG=$latest_tag" >> $GITHUB_ENV
        echo "New tag will be: $latest_tag"

    - name: Create and Push New Tag
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git tag $NEW_TAG
        git push origin $NEW_TAG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.NEW_TAG }}
        name: Release ${{ env.NEW_TAG }}
        draft: false
        prerelease: false
        files: image-syncer.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
